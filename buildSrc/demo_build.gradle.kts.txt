plugins {
    id("com.android.application")
    id("dagger.hilt.android.plugin")
    id("org.jetbrains.kotlin.android")
    kotlin("kapt")
}

android {
    compileSdk = AppBuildConfig.compileSdk

    defaultConfig {
        applicationId = AppBuildConfig.applicationId
        minSdk = AppBuildConfig.minSdk
        targetSdk = AppBuildConfig.targetSdk
        versionCode = AppBuildConfig.versionCode
        versionName = AppBuildConfig.versionName
        testInstrumentationRunner = AppBuildConfig.androidJunit

        vectorDrawables {
            useSupportLibrary = true
        }
    }

    buildTypes {
        getByName("release") {
            isMinifyEnabled = true
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }

        getByName("debug") {
            isMinifyEnabled = false
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
            applicationIdSuffix = ".debug"
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = Versions.compose
    }

    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {

    implementation(fileTree(mapOf("dir" to "libs", "include" to listOf("*.jar"))))


    implementation(Dependencies.baseImplementation)
    implementation(Dependencies.composeImplementation)
    implementation(Dependencies.networkImplementation)
    implementation(Dependencies.localStorageImplementation)
    implementation(Dependencies.diImplementation)
    implementation(Dependencies.otherImplementations)
    implementation(Dependencies.testImplementation)

    testImplementation(Dependencies.testImplementation)
    testImplementation(Dependencies.localStorageTestImplementation)
    androidTestImplementation(Dependencies.androidTestImplementation)

    kapt(Dependencies.localStorageKapt)
    kapt(Dependencies.diKapt)

    annotationProcessor(Dependencies.localStorageAnnotation)


}